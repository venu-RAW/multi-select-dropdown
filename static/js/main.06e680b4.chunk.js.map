{"version":3,"sources":["components/DropDown/DropDown.module.scss","components/SearchBar/SearchBar.jsx","components/DropDown/DropDown.jsx","App.js","index.js","components/SearchBar/SearchBar.module.scss"],"names":["module","exports","SearchBar","state","searchInput","handleChange","e","target","value","setState","props","query","searchResult","resultArray","searchData","searchKeys","displayKey","resultList","length","forEach","key","filter","data","toLowerCase","includes","console","error","input","this","focus","setSelectionRange","placeholder","alignIcon","className","styles","searchBar","type","autoFocus","onChange","ref","searchBtn","Component","defaultProps","DropDown","showDropDown","selectedValue","selectAll","toggle","selectSingleOption","result","multiSelect","removeSelection","some","curr","id","rem","toggleSelectAll","removeValue","removedValue","option","noResultArray","noResult","closeDropDown","event","currentTarget","contains","relatedTarget","prompt","listData","data-test","dropdown","tabIndex","onKeyPress","onBlur","control","selectedValuesContainer","top","topInside","map","onClick","bottom","arrow","options","border","indicator","v","url","App","componentDidMount","a","axios","log","showResult","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.06e680b4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dropdown\":\"DropDown_dropdown__1KvCw\",\"control\":\"DropDown_control__13mWO\",\"selectedValue\":\"DropDown_selectedValue__27qhd\",\"selectedValuesContainer\":\"DropDown_selectedValuesContainer__1c148\",\"top\":\"DropDown_top__SOmQz\",\"topInside\":\"DropDown_topInside__2xsWc\",\"bottom\":\"DropDown_bottom__YJcPp\",\"value\":\"DropDown_value__1mzqH\",\"prompt\":\"DropDown_prompt__h1XT7\",\"arrow\":\"DropDown_arrow__7Kzhz\",\"options\":\"DropDown_options__sQqlv\",\"option\":\"DropDown_option__1959D\",\"selectAll\":\"DropDown_selectAll__16l-R\",\"border\":\"DropDown_border__2IT5J\",\"indicator\":\"DropDown_indicator__3os8Y\",\"isSelected\":\"DropDown_isSelected__1CFHT\",\"noResult\":\"DropDown_noResult__1VoLw\"};","import React, { Component } from \"react\";\nimport styles from \"./SearchBar.module.scss\";\nimport PropTypes from \"prop-types\";\n\n/**\n * Renders a <Searchbar /> component\n * @component\n *\t<SearchBar\n *\t\tsearchData={data}\n *\t\tdisplayKey={displayKey}\n *\t\tsearchKeys={searchKeys}\n *\t\tresultList={this.resultList}\n *\t\talignIcon=\"left\"\n *\t\tresult={result}\n *\t/>\n */\n\nclass SearchBar extends Component {\n\tstate = {\n\t\tsearchInput: \"\",\n\t};\n\n\tcomponentDidMount() {\n\t\tconst input = this.input;\n\t\tconst length = input.value.length;\n\t\tinput.focus();\n\t\tinput.setSelectionRange(length, length);\n\t}\n\n\t/**\n\t * @function handleChange\n\t * @param {Event} event\n\t * Sets searchInput inside state and the searchInput value is passed to searchResult().\n\t */\n\thandleChange = (e) => {\n\t\tconst searchInput = e.target.value;\n\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tsearchInput,\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tthis.props.query(searchInput);\n\t\t\t}\n\t\t);\n\n\t\tthis.searchResult(searchInput);\n\t};\n\n\t/**\n\t * @function searchResult\n\t * @fires props.result\n\t */\n\tsearchResult = (searchInput) => {\n\t\tlet resultArray = [];\n\t\tconst { searchData, searchKeys, displayKey, resultList } = this.props;\n\n\t\tif (searchInput.length) {\n\t\t\tsearchKeys.forEach((key) => {\n\t\t\t\tif (key === displayKey) {\n\t\t\t\t\tresultArray = searchData.filter((data) =>\n\t\t\t\t\t\tdata[key].toLowerCase().includes(searchInput.toLowerCase())\n\t\t\t\t\t);\n\n\t\t\t\t\t/**\n\t\t\t\t\t * Execute callback named result and return it.\n\t\t\t\t\t */\n\t\t\t\t\treturn resultList(resultArray);\n\t\t\t\t}\n\t\t\t\tconsole.error(\"Keys are not same\");\n\t\t\t});\n\t\t} else {\n\t\t\treturn resultList(searchData);\n\t\t}\n\t};\n\n\trender() {\n\t\tconst { placeholder, alignIcon } = this.props;\n\n\t\treturn (\n\t\t\t<div className={`${styles.searchBar} ${styles[alignIcon]}`}>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tautoFocus\n\t\t\t\t\tclassName={styles.searchInput}\n\t\t\t\t\tvalue={this.state.searchInput}\n\t\t\t\t\tplaceholder={placeholder}\n\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\tref={(ref) => (this.input = ref)}\n\t\t\t\t/>\n\t\t\t\t<div className={styles.searchBtn}>\n\t\t\t\t\t<i className=\"fas fa-search\"></i>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nSearchBar.propTypes = {\n\t/**\n\t * The searchData type must be an array of objects ( Required ).\n\t */\n\tsearchData: PropTypes.array.isRequired,\n\t/**\n\t * The searchKeys type must be array of object keys.\n\t */\n\tsearchKeys: PropTypes.arrayOf(PropTypes.string),\n\t/**\n\t * The placeholder type must be a string.\n\t */\n\tplaceholder: PropTypes.string,\n\t/**\n\t * The alignIcon type must be a string ( left or right )\n\t * By default is \"right\"\n\t */\n\talignIcon: PropTypes.oneOf([\"left\", \"right\"]),\n\t/**\n\t * The type of the displayKey must be a string. This prop is used when\n\t * SearchBar component is used with the DropDown component.\n\t */\n\tdisplayKey: PropTypes.string,\n\t/**\n\t * The type of the resultList must be a funciton. This prop is used when\n\t * SearchBar component is used with the DropDown component.\n\t */\n\tresultList: PropTypes.func,\n\t/**\n\t * The result type must funciton. It shows the result for the query.\n\t */\n\tresult: PropTypes.func,\n};\n\nSearchBar.defaultProps = {\n\tplaceholder: \"Search\",\n\talignIcon: \"right\",\n};\n\nexport default SearchBar;\n","import React, { Component } from \"react\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport styles from \"./DropDown.module.scss\";\nimport PropTypes from \"prop-types\";\n\n/**\n ** Renders a <DropDown /> component\n * @component\n *\t<DropDown\n *\t\tdata={data}\n *\t\tdisplayKey=\"firstName\"\n *\t\tsearchKeys={[\"firstName\", \"lastName\", \"university\"]}\n *\t\tresult={this.showResult}\n *\t/>\n */\n\nclass DropDown extends Component {\n\tstate = {\n\t\tquery: \"\",\n\t\tshowDropDown: false,\n\t\tselectedValue: [],\n\t\tresultArray: [],\n\t\tselectAll: false,\n\t};\n\n\ttoggle = () => {\n\t\tconst { showDropDown } = this.state;\n\t\tthis.setState({\n\t\t\tshowDropDown: !showDropDown,\n\t\t});\n\t};\n\n\t/**\n\t * @function resultList\n\t * @param resultArray\n\t ** Sets resultArray inside state.\n\t */\n\tresultList = (resultArray) => {\n\t\tthis.setState({\n\t\t\tresultArray: [...resultArray],\n\t\t});\n\t};\n\n\t/**\n\t * @function onClickHandler\n\t * @param value\n\t ** Sets selectedValue inside state and the selectedValue value is passed to result().\n\t */\n\tselectSingleOption = (value) => {\n\t\tconst { selectedValue } = this.state;\n\t\tconst { result, multiSelect } = this.props;\n\t\tlet removeSelection = selectedValue;\n\n\t\tif (!multiSelect) {\n\t\t\tthis.setState(\n\t\t\t\t{\n\t\t\t\t\tselectedValue: [value],\n\t\t\t\t},\n\t\t\t\t() => result(this.state.selectedValue)\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tif (multiSelect && !selectedValue.some((curr) => curr.id === value.id)) {\n\t\t\tthis.setState(\n\t\t\t\t{\n\t\t\t\t\tselectedValue: [...selectedValue, value],\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tresult(this.state.selectedValue);\n\t\t\t\t\tthis.toggleSelectAll();\n\t\t\t\t}\n\t\t\t);\n\t\t\treturn;\n\t\t}\n\n\t\tremoveSelection = removeSelection.filter((rem) => rem !== value);\n\t\tif (selectedValue.length === 0 || selectedValue.length - 1) {\n\t\t\tthis.setState({\n\t\t\t\tselectAll: false,\n\t\t\t});\n\t\t}\n\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tselectedValue: [...removeSelection],\n\t\t\t},\n\t\t\t() => result(this.state.selectedValue)\n\t\t);\n\t};\n\n\t/**\n\t * Select all the options\n\t */\n\tselectAll = () => {\n\t\tconst { selectAll } = this.state;\n\t\tconst { result, multiSelect, data } = this.props;\n\n\t\tif (multiSelect) {\n\t\t\tthis.setState(\n\t\t\t\t{\n\t\t\t\t\tselectAll: !selectAll,\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tconst { selectAll: all } = this.state;\n\t\t\t\t\tif (all) {\n\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tselectedValue: [...data],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t() => result(this.state.selectedValue)\n\t\t\t\t\t\t);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tselectedValue: [],\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t() => result(this.state.selectedValue)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t};\n\n\t/**\n\t * @function removeValue\n\t * @param data\n\t ** Removes all the selected values from the selectedValue array.\n\t */\n\ttoggleSelectAll = () => {\n\t\tconst { selectedValue } = this.state;\n\t\tconst { data } = this.props;\n\n\t\tif (data.length === selectedValue.length) {\n\t\t\tthis.setState({\n\t\t\t\tselectAll: true,\n\t\t\t});\n\t\t}\n\t};\n\n\t/**\n\t * @function removeValue\n\t * @param value\n\t ** Removes selectedValue from the selectedValue array.\n\t */\n\tremoveValue = (value) => {\n\t\tconst { selectedValue } = this.state;\n\t\tconst { result } = this.props;\n\n\t\tconst removedValue = selectedValue.filter((option) => option !== value);\n\t\tthis.setState(\n\t\t\t{\n\t\t\t\tselectedValue: removedValue,\n\t\t\t},\n\t\t\t() => {\n\t\t\t\tresult(this.state.selectedValue);\n\t\t\t}\n\t\t);\n\t};\n\n\tnoResultArray = () => {\n\t\tif (!this.state.query.length) return true;\n\n\t\treturn false;\n\t};\n\n\tnoResult = () => {\n\t\tconst { displayKey } = this.props;\n\t\tconst result = this.state.resultArray.some(\n\t\t\t(data) => this.state.query !== data[displayKey]\n\t\t);\n\n\t\tif (!result && !this.state.query.length) return true;\n\t\tif (!result) return;\n\n\t\treturn true;\n\t};\n\n\t/**\n\t * @function closeDropDown\n\t * @param {Event} event\n\t ** Sets selectedValue inside state and the selectedValue value is passed to result().\n\t */\n\tcloseDropDown = (event) => {\n\t\tif (\n\t\t\tevent.currentTarget.id === \"dropdown\" &&\n\t\t\t!event.currentTarget.contains(event.relatedTarget)\n\t\t) {\n\t\t\tthis.setState({\n\t\t\t\tshowDropDown: false,\n\t\t\t});\n\t\t}\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\tshowDropDown,\n\t\t\tselectedValue,\n\t\t\tresultArray,\n\t\t\tselectAll,\n\t\t} = this.state;\n\n\t\tconst { data, searchKeys, prompt, displayKey, multiSelect } = this.props;\n\n\t\tconst listData = resultArray.length ? resultArray : data;\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<div\n\t\t\t\t\tid=\"dropdown\"\n\t\t\t\t\tdata-test=\"dropdown\"\n\t\t\t\t\tclassName={styles.dropdown}\n\t\t\t\t\ttabIndex={0}\n\t\t\t\t\tonKeyPress={() => this.setState({ showDropDown: true })}\n\t\t\t\t\tonBlur={this.closeDropDown}\n\t\t\t\t>\n\t\t\t\t\t<div\n\t\t\t\t\t\ttabIndex={0}\n\t\t\t\t\t\tdata-test=\"control\"\n\t\t\t\t\t\tclassName={styles.control}\n\t\t\t\t\t\t// onClick={this.toggle}\n\t\t\t\t\t>\n\t\t\t\t\t\t<div className={styles.selectedValue}>\n\t\t\t\t\t\t\t{!multiSelect ? (\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t{selectedValue.length\n\t\t\t\t\t\t\t\t\t\t? selectedValue[0][displayKey]\n\t\t\t\t\t\t\t\t\t\t: prompt}\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t) : selectedValue.length || selectAll ? (\n\t\t\t\t\t\t\t\t<div className={styles.selectedValuesContainer}>\n\t\t\t\t\t\t\t\t\t<div className={styles.top}>\n\t\t\t\t\t\t\t\t\t\t<div className={styles.topInside}>\n\t\t\t\t\t\t\t\t\t\t\t{selectedValue.map((value) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\tkey={value.id}\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={styles.value}\n\t\t\t\t\t\t\t\t\t\t\t\t\ttabIndex={0}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>{value[displayKey]}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.removeValue(value);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-times\"></i>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className={styles.bottom}>\n\t\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\t\t\tselectAll: false,\n\t\t\t\t\t\t\t\t\t\t\t\t\tselectedValue: [],\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-times\"></i>\n\t\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<div className={styles.prompt}>\n\t\t\t\t\t\t\t\t\t<span>{prompt}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className={styles.arrow} onClick={this.toggle}>\n\t\t\t\t\t\t\t<i\n\t\t\t\t\t\t\t\tdata-test=\"icon\"\n\t\t\t\t\t\t\t\tclassName={`fas fa-caret-${\n\t\t\t\t\t\t\t\t\tshowDropDown ? `up` : `down`\n\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t></i>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t{showDropDown && (\n\t\t\t\t\t\t<div className={styles.options} tabIndex={0}>\n\t\t\t\t\t\t\t<SearchBar\n\t\t\t\t\t\t\t\tsearchData={data}\n\t\t\t\t\t\t\t\tdisplayKey={displayKey}\n\t\t\t\t\t\t\t\tsearchKeys={searchKeys}\n\t\t\t\t\t\t\t\tresultList={this.resultList}\n\t\t\t\t\t\t\t\tquery={(query) => this.setState({ query })}\n\t\t\t\t\t\t\t\talignIcon=\"left\"\n\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t{this.noResult() ? (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t{multiSelect && this.noResultArray() && (\n\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\tonClick={this.selectAll}\n\t\t\t\t\t\t\t\t\t\t\tclassName={styles.selectAll}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<div className={styles.border}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`${styles.indicator} ${\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyles[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.state.selectAll\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"isSelected\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t\t\t\t></div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t<p>Select All</p>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t\t\t{listData.map((data) => (\n\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\ttabIndex={0}\n\t\t\t\t\t\t\t\t\t\t\tdata-test=\"option\"\n\t\t\t\t\t\t\t\t\t\t\tkey={data.id}\n\t\t\t\t\t\t\t\t\t\t\tonKeyPress={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\tif (e.key === \"Enter\") {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.selectSingleOption(data);\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowDropDown: false,\n\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst { multiSelect } = this.props;\n\t\t\t\t\t\t\t\t\t\t\t\tthis.selectSingleOption(data);\n\t\t\t\t\t\t\t\t\t\t\t\t// this.toggleSelectAll(data);\n\t\t\t\t\t\t\t\t\t\t\t\tif (!multiSelect) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.toggle();\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tclassName={`${styles.option} `}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<div className={styles.border}>\n\t\t\t\t\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\t\t\t\t\tclassName={`${styles.indicator} ${\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyles[\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.state.selectedValue.some(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t(v) => v === data\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t? \"isSelected\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t: \"\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t\t\t\t\t></div>\n\t\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t\t\t{data[displayKey]}\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<div className={styles.noResult}>No results</div>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</>\n\t\t);\n\t}\n}\n\nDropDown.propTypes = {\n\t/**\n\t ** The data type must be an array of objects ( Required ).\n\t */\n\tdata: PropTypes.array.isRequired,\n\t/**\n\t ** The searchKeys type must be array of object keys.\n\t */\n\tsearchKeys: PropTypes.arrayOf(PropTypes.string),\n\t/**\n\t ** The promt type must be a string. It is like a placeholder for the dropdwon.\n\t */\n\tpromt: PropTypes.string,\n\t/**\n\t ** The alignIcon type must be a string ( left or right )\n\t ** By default is \"right\"\n\t */\n\talignIcon: PropTypes.oneOf([\"left\", \"right\"]),\n\t/**\n\t ** The type of the displayKey must be a string. This prop is used when\n\t ** SearchBar component is used with the DropDown component.\n\t */\n\tdisplayKey: PropTypes.string,\n\t/**\n\t ** The result type must funciton. It shows the result for the query.\n\t */\n\tresult: PropTypes.func.isRequired,\n};\n\nDropDown.defaultProps = {\n\tprompt: \"Select\",\n\tmultiSelect: false,\n};\n\nexport default DropDown;\n\n// .filter((list) => selectedValue.findIndex((val) => val === list) === -1)\n","import { Component } from \"react\";\nimport axios from \"axios\";\nimport DropDown from \"./components/DropDown/DropDown\";\n\n// const url = \"https://venu-raw.github.io/personsMockData/profileData.json\";\nconst url = \"https://venu-raw.github.io/personsMockData/mockData.json\";\n\nclass App extends Component {\n\tstate = {\n\t\tdata: [],\n\t};\n\n\tcomponentDidMount = async () => {\n\t\ttry {\n\t\t\tlet searchData = await axios(url);\n\n\t\t\tif (searchData) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tdata: [...searchData.data],\n\t\t\t\t});\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n\n\tshowResult = (result) => {\n\t\tconsole.log(`Result: `, result);\n\t};\n\n\trender() {\n\t\tconst { data } = this.state;\n\t\treturn (\n\t\t\t<DropDown\n\t\t\t\tdata={data}\n\t\t\t\tdisplayKey=\"firstName\"\n\t\t\t\t// searchKeys={[\"firstName\", \"lastName\", \"university\"]}\n\t\t\t\tsearchKeys={[\"firstName\"]}\n\t\t\t\tresult={this.showResult}\n\t\t\t\tmultiSelect={true}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"left\":\"SearchBar_left__1km4l\",\"searchBar\":\"SearchBar_searchBar__1hWdk\",\"searchInput\":\"SearchBar_searchInput__3c1Ob\",\"searchBtn\":\"SearchBar_searchBtn__jrPCs\"};"],"sourceRoot":""}